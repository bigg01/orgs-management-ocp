apiVersion: maistra.io/v1
kind: ServiceMeshControlPlane
metadata:
  name: basic-install
  namespace: istio-system
spec:
  istio:
    global:
      istioNamespace: istio-system
      multitenant: false
      proxy:
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 128Mi
    gateways:
      istio-egressgateway:
        autoscaleEnabled: false
      istio-ingressgateway:
        autoscaleEnabled: false
        ior_enabled: false
      oauth-ingressgateway:
        enabled: true
        autoscaleEnabled: false
        #namespace: bookinfo
        additionalContainers:
        - args:
          - --provider=oidc
          # - --provider-display-name="Keycloak"
          - --client-id=istio-client
          - --client-secret=istio-secret
          - '--email-domain=*'
          - --insecure-oidc-allow-unverified-email=true	
          - --pass-authorization-header=true
          - --pass-user-headers=true
          - --pass-host-header=true
          - --oidc-issuer-url=https://${keycloak_route}/auth/realms/ocp
          - --http-address=0.0.0.0:8081
          - --https-address=0.0.0.0:8444
          - --cookie-secret=UjdUeldZREI5bDF4N3dnSi9BZ3hxUT09
          - --cookie-expire=4h0m0s
          - --standard-logging=true
          - --auth-logging=true
          - --request-logging=true
          - --skip-provider-button=true
          - --upstream=http://127.0.0.1:8080
          - --ssl-insecure-skip-verify=true
          - --ssl-upstream-insecure-skip-verify=true
          - --tls-cert-file=/etc/oauth2-proxy/certs/tls.crt
          - --tls-key-file=/etc/oauth2-proxy/certs/tls.key
          env:
          image: quay.io/pusher/oauth2_proxy:v5.1.0
          imagePullPolicy: Always
          name: oauth2-proxy
          ports:
            - containerPort: 8081
              protocol: TCP
              name: oauth-http
            - containerPort: 8081
              protocol: TCP
              name: oauth-https              
          volumeMounts:
            - name: oauth2-proxy-tls
              mountPath: /etc/oauth2-proxy/certs    
        sds:
          # If true, ingress gateway fetches credentials from SDS server to handle TLS connections.
          enabled: false     
        labels:
          app: oauth-ingressgateway
          istio: ingressgateway
          #'maistra.io/expose-route': "true"
        serviceAnnotations: 
          service.beta.openshift.io/serving-cert-secret-name: oauth2-proxy-tls
        type: ClusterIP
        #externalTrafficPolicy: Local #change to Local to preserve source IP or Cluster for default behaviour or leave commented out
        ports:
          ## You can add custom gateway ports
          # Note that AWS ELB will by default perform health checks on the first port
          # on this list. Setting this to the health check port will ensure that health
          # checks always work. https://github.com/istio/istio/issues/12503
        - port: 15020
          targetPort: 15020
          name: status-port
        - port: 80
          targetPort: 8080
          name: http2         
        - port: 443
          targetPort: 8443
          name: https
        # Example of a port to add. Remove if not needed
        ### PORTS FOR UI/metrics #####
        ## Disable if not needed
          # This is the port where sni routing happens
        - port: 15443
          targetPort: 15443
          name: tls
        - port: 8081
          targetPort: 8081
          name: oauth-http
        - port: 8444
          targetPort: 8444
          name: oauth-https                     
        secretVolumes:
        - name: ingressgateway-certs
          secretName: istio-ingressgateway-certs
          mountPath: /etc/istio/ingressgateway-certs
        - name: ingressgateway-ca-certs
          secretName: istio-ingressgateway-ca-certs
          mountPath: /etc/istio/ingressgateway-ca-certs
        - name: oauth2-proxy-tls
          secretName: oauth2-proxy-tls
          mountPath: /etc/oauth2-proxy/certs                        
    mixer:
      policy:
        autoscaleEnabled: false
      telemetry:
        autoscaleEnabled: false
        resources:
          requests:
            cpu: 100m
            memory: 1Gi
          limits:
            cpu: 500m
            memory: 4Gi
    pilot:
      autoscaleEnabled: false
      traceSampling: 100
      resources:
          requests:
            cpu: 100m
            memory: 1Gi
          limits:
            cpu: 500m
            memory: 2Gi
    kiali:
      enabled: true
    grafana:
      enabled: true
    tracing:
      enabled: true
      jaeger:
        template: all-in-one
    threeScale:
      enabled: false